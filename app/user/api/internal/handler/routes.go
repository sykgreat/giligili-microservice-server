// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	base "giligili/app/user/api/internal/handler/base"
	user "giligili/app/user/api/internal/handler/user"
	"giligili/app/user/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.GetUserIp},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/register",
					Handler: base.RegisterHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/login/captcha",
					Handler: base.LoginByCaptchaHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/login/password",
					Handler: base.LoginByPasswordHandler(serverCtx),
				},
			}...,
		),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.JwtAuthMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/logout",
					Handler: user.LogoutHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/info",
					Handler: user.GetUserInfoHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/info/change",
					Handler: user.ChangeDetailHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/password/change/captcha",
					Handler: user.ChangePasswordByCaptchaHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/password/change/password",
					Handler: user.ChangePasswordByPasswordHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/user"),
	)
}
