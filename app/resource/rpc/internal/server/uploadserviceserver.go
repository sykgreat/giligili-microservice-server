// Code generated by goctl. DO NOT EDIT.
// Source: resource.proto

package server

import (
	"context"

	"giligili/app/resource/rpc/internal/logic"
	"giligili/app/resource/rpc/internal/svc"
	"giligili/app/resource/rpc/pb"
)

type UploadServiceServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedUploadServiceServer
}

func NewUploadServiceServer(svcCtx *svc.ServiceContext) *UploadServiceServer {
	return &UploadServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *UploadServiceServer) UploadVideo(stream pb.UploadService_UploadVideoServer) error {
	l := logic.NewUploadVideoLogic(stream.Context(), s.svcCtx)
	return l.UploadVideo(stream)
}

func (s *UploadServiceServer) UploadImg(stream pb.UploadService_UploadImgServer) error {
	l := logic.NewUploadImgLogic(stream.Context(), s.svcCtx)
	return l.UploadImg(stream)
}

func (s *UploadServiceServer) ChangeResourceTitle(ctx context.Context, in *pb.ChangeResourceTitleRequest) (*pb.BaseResponse, error) {
	l := logic.NewChangeResourceTitleLogic(ctx, s.svcCtx)
	return l.ChangeResourceTitle(in)
}

func (s *UploadServiceServer) DeleteResource(ctx context.Context, in *pb.DeleteResourceRequest) (*pb.BaseResponse, error) {
	l := logic.NewDeleteResourceLogic(ctx, s.svcCtx)
	return l.DeleteResource(in)
}
