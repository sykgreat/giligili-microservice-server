// Code generated by goctl. DO NOT EDIT.
// Source: captcha.proto

package captchaservice

import (
	"context"

	"giligili/app/captcha/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetCaptchaByEmailReq  = pb.GetCaptchaByEmailReq
	GetCaptchaByEmailResp = pb.GetCaptchaByEmailResp
	VerifyCaptchaReq      = pb.VerifyCaptchaReq
	VerifyCaptchaResp     = pb.VerifyCaptchaResp

	CaptchaService interface {
		GetCaptchaByEmail(ctx context.Context, in *GetCaptchaByEmailReq, opts ...grpc.CallOption) (*GetCaptchaByEmailResp, error)
		VerifyCaptcha(ctx context.Context, in *VerifyCaptchaReq, opts ...grpc.CallOption) (*VerifyCaptchaResp, error)
	}

	defaultCaptchaService struct {
		cli zrpc.Client
	}
)

func NewCaptchaService(cli zrpc.Client) CaptchaService {
	return &defaultCaptchaService{
		cli: cli,
	}
}

func (m *defaultCaptchaService) GetCaptchaByEmail(ctx context.Context, in *GetCaptchaByEmailReq, opts ...grpc.CallOption) (*GetCaptchaByEmailResp, error) {
	client := pb.NewCaptchaServiceClient(m.cli.Conn())
	return client.GetCaptchaByEmail(ctx, in, opts...)
}

func (m *defaultCaptchaService) VerifyCaptcha(ctx context.Context, in *VerifyCaptchaReq, opts ...grpc.CallOption) (*VerifyCaptchaResp, error) {
	client := pb.NewCaptchaServiceClient(m.cli.Conn())
	return client.VerifyCaptcha(ctx, in, opts...)
}
